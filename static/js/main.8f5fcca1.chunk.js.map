{"version":3,"sources":["Components/Backend/Cookies/addWebAppAction.js","Components/Frontend/EthereumDataMin.js","Components/Frontend/Contact.js","Components/Frontend/Opener.js","index.js"],"names":["Web3","providers","HttpProvider","ip","buttonID","sessionID","a","sourceAccount","web3","contractAddress","cookieContract","eth","Contract","cookieAbi","myData","methods","webAppAction","slice","utils","toHex","encodeABI","getTransactionCount","txCount","net","getId","networkId","txObject","nonce","to","from","chainId","value","toWei","gasLimit","gasPrice","data","accounts","signTransaction","process","raw","sendSignedTransaction","rawTransaction","transaction","console","log","addWebAppAction","require","EthereumDataMin","state","latestBlock","length","Number","count","getBlock","transactions","this","setState","props","getLatestBlock","blockNumber","id","className","href","target","rel","onClick","_addWebAppAction","number","miner","size","Component","Contact","Opener","Application","initSession","logs","abi","decodeParameters","publicIP","then","hashedIP","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5fcca1.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport cookieAbi from './Cookies.json';\nimport { sha256, sha224 } from 'js-sha256';\n\nconst web3 = new Web3(\n\tnew Web3.providers.HttpProvider('https://ropsten.infura.io/v3/4fdbae7ae3e94fb9a3033c623fc4e7f0'));\n\nasync function addWebAppAction(ip, buttonID, sessionID) {\n\ttry {\n\t\t//if (window.ethereum.enable) {...}\n\t\t//      else {}\n\t\tconst sourceAccount = '0x77754bdda8a6391f340bb2ffe2da6a58a30b7228';\n\t\tconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/4fdbae7ae3e94fb9a3033c623fc4e7f0\"));\n\t\tconst contractAddress = '0xd2cf9f677f361f23c576825978338c4a21291646';\n\t\tconst cookieContract = new web3.eth.Contract(cookieAbi, contractAddress);\n\t\tconst myData = cookieContract.methods.webAppAction(ip.slice(0,7), web3.utils.toHex(buttonID), web3.utils.toHex(sessionID)).encodeABI();\n\t\tconst txCount = await web3.eth.getTransactionCount(sourceAccount);\n\t\tconst networkId = await web3.eth.net.getId();\n        // Build the transaction\n        const txObject = {\n          \tnonce: web3.utils.toHex(txCount),\n          \tto: contractAddress,\n          \tfrom: sourceAccount,\n          \tchainId: networkId,\n          \tvalue: web3.utils.toHex(web3.utils.toWei('0', 'ether')),\n          \tgasLimit: web3.utils.toHex(100000),\n          \tgasPrice: web3.utils.toHex(web3.utils.toWei('5', 'gwei')),\n          \tdata: myData  \n        };\n        // Sign the transaction\n        const raw = await web3.eth.accounts.signTransaction(\n          \ttxObject,\n          \tprocess.env.REACT_APP_SECRET\n        );\n        // Broadcast the transaction\n        const transaction = await web3.eth.sendSignedTransaction(raw.rawTransaction);\n        console.log('TX: ', transaction);\n    } catch (error) {\n      \tconsole.log('Add Action failed: ', error);\n    }\n}\n\nexport default addWebAppAction;","import React, { Component } from 'react';\r\nimport addWebAppAction from '../Backend/Cookies/addWebAppAction';\r\nconst Web3 = require('web3');\r\nclass EthereumDataMin extends Component {\r\n\tconstructor() {\r\n    \tsuper();\r\n\t    this.state = {\r\n\t      latestBlock: {},\r\n\t      length: Number,\r\n\t      count: 0,\r\n\t    };\r\n  \t}\r\n\tasync getLatestBlock() {\r\n  \t\ttry {\r\n\t\t    const web3 = new Web3(\r\n\t    \t\tnew Web3.providers.HttpProvider('https://mainnet.infura.io/v3/4fdbae7ae3e94fb9a3033c623fc4e7f0')\r\n\t  \t\t);\r\n\t  \t\tconst latestBlock = await web3.eth.getBlock('latest');\r\n\t  \t\tconst length = latestBlock.transactions.length;\r\n\t  \t\tconst count = 1;\r\n\t  \t\tthis.setState({latestBlock, length, count});\r\n  \t\t} catch (error){\r\n  \t\t\tconsole.log('FAILED TO LOAD BLOCK: ', error);\r\n  \t\t}\r\n\t}\r\n  \t_addWebAppAction (buttonID) {\r\n\t    if (this.props.count == 2) {\r\n\t    \tthis.getLatestBlock();\r\n\t        addWebAppAction('HiddenIP', buttonID, this.props.sessionID);\r\n\t    } else {\r\n\t    \tthis.getLatestBlock();\r\n\t      \taddWebAppAction(this.props.ip, buttonID, this.props.sessionID);      \r\n\t    }\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.count == 0) {\r\n\t\t\tthis.getLatestBlock();\r\n\t\t}\r\n\t\tconst blockNumber = this.state.latestBlock;\r\n\t\tconst length = this.state.length;\r\n\treturn (\r\n\t\t<section id=\"ethereumDataMin\">\r\n\t\t\t<div className=\"ethereumDataMin\">\r\n\t\t\t\t<a href='https://etherscan.io/blocks' target=\"_blank\" rel='noreferrer' onClick={() => this._addWebAppAction(2)}>\r\n\t\t\t\t<button>ethereum data</button>\r\n\t\t\t\t</a>\r\n\t\t\t\t<br/><h2>Blocknumber<br/><span>{blockNumber.number}</span></h2>\r\n\t\t\t\t<br/><h2>Puzzle Solver<br/><span>{blockNumber.miner}</span></h2>\r\n\t\t\t\t<br/><h2>Transactions<br/><span>{length}</span></h2>\r\n\t\t\t\t<br/><h2>Size in Bytes<br/><span>{blockNumber.size}</span></h2>\r\n\t\t\t\t<button onClick={() => this._addWebAppAction(3)}>update block</button><br/><br/><br/>\r\n\t\t\t\t<h3>To verify the above visualized data take a look at the ethereum blockchain explorer.<br/>\r\n\t\t\t\tA tool to read data from the ethereum blockchain via the browser.\r\n\t\t\t\t<br/>\r\n\t\t\t\t(button on top)\r\n\t\t\t\t</h3>\r\n\t\t\t\t<br/><br/><br/><br/><hr/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n  \t)\r\n  }\r\n}\r\nexport default EthereumDataMin;\r\n","import React, { Component } from 'react';\r\nimport addWebAppAction from '../Backend/Cookies/addWebAppAction';\r\nimport { \r\n  FaLinkedin,\r\n  FaGithub,\r\n  FaTelegram,\r\n  FaTwitter,\r\n  FaWhatsapp,\r\n} from 'react-icons/fa';\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  _addWebAppAction (buttonID) {\r\n    if (this.props.count == 2) {\r\n      addWebAppAction('HiddenIP', buttonID, this.props.sessionID);\r\n    } else {\r\n      addWebAppAction(this.props.ip, buttonID, this.props.sessionID);      \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <section id=\"contact\">\r\n        <div className=\"contact\">\r\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n          <a href=\"https://wa.me/message/AAIDX7NDPAJ3J1\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(4)}><FaWhatsapp/></a>\r\n          <a href=\"https://twitter.com/iem_wll\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(5)}><FaTwitter/></a>\r\n          <a href=\"https://github.com/iemwill\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(6)}><FaGithub/></a>\r\n          <a href=\"https://t.me/whatuup\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(7)}><FaTelegram/></a>\r\n          <a href=\"https://linkedin.com/in/w-ll\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(8)}><FaLinkedin/></a>\r\n          <br/><br/><br/><br/>\r\n        </div>\r\n        <div id=\"c0n74c7\">\r\n          <a id=\"bitcoin\" href=\"mailto:hello@laubenheimer.eu\" \r\n            onClick={() => this._addWebAppAction(9)}>Inspirator</a>\r\n          <a href=\"mailto:hello@laubenheimer.eu\"\r\n            onClick={() => this._addWebAppAction(9)}> & </a>\r\n          <a id=\"ethereum\" href=\"mailto:hello@laubenheimer.eu\"\r\n            onClick={() => this._addWebAppAction(9)}>Consultent</a>\r\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n          <br/><br/><a id=\"bitcoin\" href=\"bitcoin:bc1qmupy24nxjr822smvq8a2x33vd5tc6dth56p897\"\r\n            onClick={() => this._addWebAppAction(10)}>bc1qmupy24nxjr822smvq8a2x33vd5tc6dth56p897</a>\r\n          <br/><br/><a id=\"ethereum\" href=\"ethereum:0x7Cbd7A31cF11643b985DaE722bc996A69eDdC5AF\"\r\n            onClick={() => this._addWebAppAction(11)}>0x7Cbd7A31cF11643b985DaE722bc996A69eDdC5AF</a>\r\n          <br/><br/>DE75100100100959924103\r\n          <br/><br/>\r\n          <hr/><br/>Testnet-Token: <a href=\"https://ropsten.etherscan.io/address/0xFe230ee0C3D613d540c7BFd8465646c81FfBB842\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(12)}>0xFe230ee0C3D613d540c7BFd8465646c81FfBB842</a> on Ropsten\r\n          <br/><br/>NFT-Register: <a href=\"https://ropsten.etherscan.io/address/0x1CE8ac1E22DAf01406F2AdBaB87CF94516d068Eb\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(13)}>0x1CE8ac1E22DAf01406F2AdBaB87CF94516d068Eb</a> on Ropsten\r\n          <br/><br/>\r\n          <hr/><br/>We collect innovative and open source, as well as the code to these lines here, every click action and anonymized ip-address.<br/>\r\n          To see how and where the data is collected click the \"Ropsten\"-link on top.<br/>\r\n          Thank you for visiting this Application !\r\n        </div>\r\n  \t  </section>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react';\nimport addWebAppAction from '../Backend/Cookies/addWebAppAction';\nclass Opener extends Component {\n  constructor() {\n    super();\n  }\n  _addWebAppAction (buttonID) {\n    if (this.props.count == 2) {\n      addWebAppAction('HiddenIP', buttonID, this.props.sessionID);\n    } else {\n      addWebAppAction(this.props.ip, buttonID, this.props.sessionID);      \n    }\n  }\n  render() {\n    return (\n      <section id=\"opener\">\n        <div className=\"opener\">\n          <h3>{this.props.ip}<br/>Your visit was registered at the Ethereum Blockchain \n          <a href=\"https://ropsten.etherscan.io/address/0xd2cf9f677f361f23c576825978338c4a21291646\" \n            target='_blank' rel='noreferrer' onClick={() => this._addWebAppAction(1)} > Ropsten.\n          </a></h3>\n          <br/><br/>\n          <h1>\n          Bitcoin is here to free the people. from corruption, fraud, backdoor agreements, ec. <br/><br/>\n          Bitcoin enables open democracy mixed with technocracy. <br/><br/>\n          Ethereum can be seen as Bitcoin's twin and a \"playground\" for more unsecure procedures, not just because it is turing complete. <br/><br/>\n          </h1>\n          <h2>- for&#40;ever&#41;&#123;young&#125; - <br/><br/></h2>\n          <h1><br/><br/> ! Power To The People ! <br/><hr/></h1>\n        </div>\n  \t  </section>\n    );\n  }\n}\nexport default Opener;\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport publicIP from 'react-native-public-ip';\r\nimport Web3 from 'web3';\r\nimport EthereumDataMin from './Components/Frontend/EthereumDataMin';\r\nimport Contact from './Components/Frontend/Contact';\r\nimport Opener from './Components/Frontend/Opener';\r\nimport cookieAbi from'./Components/Backend/Cookies/Cookies.json';\r\nclass Application extends Component {\r\nconstructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n      ip: 'Your ip address could not be set. Maybe your privacy settings, well done :)',\r\n      sessionID: 0,\r\n    };\r\n  }\r\n  async initSession(ip) {\r\n    if (this.state.count == 0) {\r\n      try {          \r\n          const sourceAccount = '0x77754bdda8a6391f340bb2ffe2da6a58a30b7228';\r\n          const web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/4fdbae7ae3e94fb9a3033c623fc4e7f0\"));\r\n          const contractAddress = '0xd2cf9f677f361f23c576825978338c4a21291646';\r\n          const cookieContract = new web3.eth.Contract(cookieAbi, contractAddress);\r\n          const myData = cookieContract.methods.initSession(ip.slice(0,7)).encodeABI();\r\n          const txCount = await web3.eth.getTransactionCount(sourceAccount);\r\n          const networkId = await web3.eth.net.getId();\r\n          // Build the transaction\r\n          const txObject = {\r\n              nonce: web3.utils.toHex(txCount),\r\n              to: contractAddress,\r\n              from: sourceAccount,\r\n              chainId: networkId,\r\n              value: web3.utils.toHex(web3.utils.toWei('0', 'ether')),\r\n              gasLimit: web3.utils.toHex(210000),\r\n              gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\r\n              data: myData  \r\n          };\r\n          // Sign the transaction\r\n          const raw = await web3.eth.accounts.signTransaction(\r\n               txObject,\r\n               process.env.REACT_APP_SECRET\r\n           );\r\n          // Broadcast the transaction\r\n          const transaction = await web3.eth.sendSignedTransaction(raw.rawTransaction);\r\n          console.log('TX: ', transaction);\r\n          console.log('Data: ', transaction.logs[0].data);\r\n          console.log('SessionID: ', web3.eth.abi.decodeParameters(['string', 'uint256'], transaction.logs[0].data)[1]);\r\n          this.setState({sessionID:web3.eth.abi.decodeParameters(['string', 'uint256'], transaction.logs[0].data)[1]});\r\n      } catch (error) {\r\n        console.log('Initialization failed: ', error);\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    //Get IP and register at a smart contract;;;CONSTANTS.HashAlgorithms.sha256(ip);\r\n    if (this.state.count == 0) {\r\n      publicIP()\r\n        .then(ip => {\r\n          const hashedIP = ip;\r\n          this.initSession(hashedIP);\r\n          const count = 1;\r\n          this.setState({count, hashedIP});\r\n        })\r\n        .catch(error => {\r\n          if (this.state.count != 2) {\r\n            this.initSession('HiddenIP');\r\n            const count = 2;\r\n            this.setState({count});\r\n            console.log('IP-error :', error);\r\n          }\r\n        });\r\n    } return (\r\n      <section id='App'>\r\n        <div className=\"App\">\r\n          <Opener ip = {this.state.ip} count = {this.state.count} sessionID = {this.state.sessionID} />\r\n          <EthereumDataMin ip = {this.state.ip} count = {this.state.count} sessionID = {this.state.sessionID} />\r\n          <Contact ip = {this.state.ip} count = {this.state.count} sessionID = {this.state.sessionID} />\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Application />\r\n  </React.StrictMode>,\r\n  document.getElementById('Application')\r\n);"],"sourceRoot":""}