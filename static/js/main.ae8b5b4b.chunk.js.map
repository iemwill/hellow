{"version":3,"sources":["Components/Backend/NFT/addWebAppAction.js","Components/Frontend/Contact.js","index.js"],"names":["buttonID","sessionID","sourceAccount","web3","Web3","contractAddress","websiteNFTcontract","eth","Contract","websiteNFTabi","myData","methods","mintToken","utils","toHex","encodeABI","estimateGas","from","console","log","getTransactionCount","txCount","net","getId","networkId","txObject","nonce","to","chainId","value","toWei","gasLimit","Math","round","data","maxPriorityFeePerGas","type","accounts","signTransaction","process","raw","sendSignedTransaction","rawTransaction","transaction","addWebAppAction","Contact","this","props","id","className","href","target","rel","onClick","_addWebAppAction","seed","Component","Application","state","count","account","create","randomHex","NFTsCount","call","tokenID","mintNFT","address","logs","setState","privateKey","initSession","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae8b5b4b.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport websiteNFTabi from'./websiteNFT.json';\nasync function addWebAppAction(buttonID, sessionID) {\n\ttry {\n\t\tconst sourceAccount = '0x77754bdda8a6391f340bb2ffe2da6a58a30b7228';\n        const web3 = new Web3(\"https://rpc.api.moonbase.moonbeam.network\");\n\t\tconst contractAddress = '0x7436841Fcf89CAd2CA359A489924d5B5CF08804C';\n\t\tconst websiteNFTcontract = new web3.eth.Contract(websiteNFTabi, contractAddress);\n\t\tconst myData = websiteNFTcontract.methods.mintToken(\n            web3.utils.toHex(sessionID), sourceAccount, web3.utils.toHex(buttonID)).encodeABI();\n\t\tconst estimateGas = await websiteNFTcontract.methods.mintToken(\n            web3.utils.toHex(sessionID), sourceAccount, web3.utils.toHex(buttonID)).estimateGas({from: sourceAccount});\n        console.log('ESTIMATEGAS: ', estimateGas)\n        const txCount = await web3.eth.getTransactionCount(sourceAccount);\n\t\tconst networkId = await web3.eth.net.getId();\n        // Build the transaction\n        const txObject = {\n          \tnonce: web3.utils.toHex(txCount),\n          \tto: contractAddress,\n          \tfrom: sourceAccount,\n          \tchainId: networkId,\n          \tvalue: web3.utils.toHex(web3.utils.toWei('0', 'ether')),\n          \tgasLimit: web3.utils.toHex(Math.round(estimateGas * 1.1)),\n          \t//gasPrice: web3.utils.toHex(web3.utils.toWei('2', 'Gwei')),\n          \tdata: myData,\n            maxPriorityFeePerGas: web3.utils.toHex(web3.utils.toWei('1', 'Gwei')),\n            type: 0x02\n        };\n        // Sign the transaction\n        const raw = await web3.eth.accounts.signTransaction(\n          \ttxObject,\n          \tprocess.env.REACT_APP_PRIVATE_KEY\n        );\n        // Broadcast the transaction\n        const transaction = await web3.eth.sendSignedTransaction(raw.rawTransaction);\n        console.log('TX: ', transaction);\n    } catch (error) {\n      \tconsole.log('Add Action failed: ', error);\n    }\n}\nexport default addWebAppAction;","import React, { Component } from 'react';\r\nimport addWebAppAction from '../Backend/NFT/addWebAppAction';\r\nimport { \r\n  FaLinkedin,\r\n  FaGithub,\r\n  FaTelegram,\r\n  FaTwitter,\r\n  FaWhatsapp,\r\n} from 'react-icons/fa';\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  _addWebAppAction (buttonID) {\r\n    addWebAppAction(buttonID, this.props.sessionID);\r\n  }\r\n  render() {\r\n    return (\r\n      <section id=\"contact\">\r\n        <div className=\"contact\">\r\n          <br/><br/><br/><br/><br/><br/>\r\n          <a href=\"https://wa.me/message/AAIDX7NDPAJ3J1\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(1)}><FaWhatsapp/></a>\r\n          <a href=\"https://twitter.com/iem_wll\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(2)}><FaTwitter/></a>\r\n          <a href=\"https://github.com/iemwill\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(3)}><FaGithub/></a>\r\n          <a href=\"https://t.me/whatuup\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(4)}><FaTelegram/></a>\r\n          <a href=\"https://linkedin.com/in/w-ll\" target=\"_blank\" rel=\"noreferrer\"\r\n            onClick={() => this._addWebAppAction(5)}><FaLinkedin/></a>\r\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n        </div>\r\n        <div id=\"c0n74c7\">\r\n          <a href=\"mailto:hello@laubenheimer.eu\" \r\n            onClick={() => this._addWebAppAction(6)}>Inspirator</a>\r\n          <a href=\"mailto:hello@laubenheimer.eu\"\r\n            onClick={() => this._addWebAppAction(7)}> & </a>\r\n          <a href=\"mailto:hello@laubenheimer.eu\"\r\n            onClick={() => this._addWebAppAction(8)}>Consultent</a>\r\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n          <h3>\r\n            You just have created an address on ethereum and have the right TO USE AND OWN an also \r\n            new created NFT. <br/><br/><br/>\r\n            The private key is below, WRITE IT ON A PAPER AND DOUBLECHECK.<br/><br/><br/>\r\n            For more information and to claim also generated ERC20-tokens write an email via the <br/><br/><br/>\r\n            <a href=\"mailto:hello@laubenheimer.eu\"\r\n            onClick={() => this._addWebAppAction(9)}> 'Inspirator & Consultent' - button:</a>\r\n           <br/><br/><br/>\r\n            {this.props.seed}\r\n          </h3>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Web3 from 'web3';\r\nimport Contact from './Components/Frontend/Contact';\r\nimport websiteNFTabi from'./Components/Backend/NFT/websiteNFT.json';\r\nclass Application extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n      sessionID: null,\r\n      seed: null,\r\n    };\r\n  }\r\n  async initSession() {\r\n    try {\r\n      const sourceAccount = '0x77754bdda8a6391f340bb2ffe2da6a58a30b7228';\r\n      const web3 = new Web3(\"https://rpc.api.moonbase.moonbeam.network\");\r\n      const contractAddress = '0x7436841Fcf89CAd2CA359A489924d5B5CF08804C';\r\n      const account = web3.eth.accounts.create(web3.utils.randomHex(2048));\r\n      const websiteNFTcontract = new web3.eth.Contract(websiteNFTabi, contractAddress);\r\n      const tokenID = await websiteNFTcontract.methods.NFTsCount().call();\r\n      console.log(tokenID);\r\n      const myData = websiteNFTcontract.methods.mintNFT(\r\n        sourceAccount, web3.utils.toHex(tokenID), \"https://laubenheimer.eu/NFTs/\" + tokenID, account.address).encodeABI();\r\n      const estimateGas = await websiteNFTcontract.methods.mintNFT(\r\n        sourceAccount, tokenID, \"https://laubenheimer.eu/NFTs/\" + tokenID, account.address).estimateGas({from: sourceAccount});\r\n      console.log('ESTIMATED GAS: ', estimateGas);\r\n      const txCount = await web3.eth.getTransactionCount(sourceAccount);\r\n      const networkId = await web3.eth.net.getId();\r\n      // Build the transaction\r\n      const txObject = {\r\n        nonce: web3.utils.toHex(txCount),\r\n        to: contractAddress,\r\n        from: sourceAccount,\r\n        chainId: networkId,\r\n        value: web3.utils.toHex(web3.utils.toWei('0', 'ether')),\r\n        gasLimit: web3.utils.toHex(Math.round(estimateGas * 1.1)),\r\n        //gasPrice: web3.utils.toHex(web3.utils.toWei('2', 'gwei')),\r\n        data: myData,\r\n        maxPriorityFeePerGas: web3.utils.toHex(web3.utils.toWei('2', 'gwei')),\r\n        type: 0x02\r\n      };\r\n      // Sign the transaction\r\n      const raw = await web3.eth.accounts.signTransaction(\r\n        txObject,\r\n        process.env.REACT_APP_PRIVATE_KEY\r\n      );\r\n      // Broadcast the transaction\r\n      const transaction = await web3.eth.sendSignedTransaction(raw.rawTransaction);\r\n      console.log('TX: ', transaction);\r\n      console.log('Data: ', transaction.logs[0].data);\r\n      console.log('SessionID: ', tokenID);\r\n      this.setState({sessionID: tokenID, seed: account.privateKey});\r\n    } catch (error) {\r\n      console.log('Initialization failed: ', error);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.count == 0) {\r\n      this.initSession();\r\n      const count = 1;\r\n      this.setState({count: count});\r\n    } return (\r\n      <section id='App'>\r\n        <div className=\"App\">\r\n          <Contact count = {this.state.count} sessionID = {this.state.sessionID} seed = {this.state.seed} />\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Application />\r\n  </React.StrictMode>,\r\n  document.getElementById('Application')\r\n);"],"sourceRoot":""}